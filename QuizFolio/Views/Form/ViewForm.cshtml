@model QuizFolio.Models.Template

@{
    ViewData["Title"] = Model.Title;
}

<body class="bg-light">
    <div class="container mt-4">
        <div class="card">
            <div  class="card-header">
                <h1>@Model.Title</h1>
            </div>
            <div class="card-body">
                <h5>@Model.Description</h5>
                <h5>Created by: @Model.Creator.UserName</h5>
            </div>
        </div>

        <h3>Questions</h3>
        <div class="list-group">
            @if (Model.Questions != null && Model.Questions.Any())
            {
                foreach (var question in Model.Questions)
                {
                    <div class="list-group-item">
                        <h5>@question.QuestionTitle <span class="text-danger fw-bolder">@(question.IsRequired ? "*" : "")</span></h5>
                        @switch (question.QuestionType)
                        {
                            case QuizFolio.Models.QuestionType.Text:
                                <input type="text" class="form-control" placeholder="Enter text" />
                                break;
                            case QuizFolio.Models.QuestionType.Checkbox:
                                @if (!string.IsNullOrEmpty(question.OptionsJson))
                                {
                                    try
                                    {
                                        var options = System.Text.Json.JsonSerializer.Deserialize<List<string>>(question.OptionsJson);
                                        if (options != null && options.Any())
                                        {
                                            foreach (var option in options)
                                            {
                                                <div class="form-check">
                                                    <input class="form-check-input" type="checkbox" id="@option" value="@option">
                                                    <label class="form-check-label" for="@option">@option</label>
                                                </div>
                                            }
                                        }
                                    }
                                    catch (System.Text.Json.JsonException ex)
                                    {
                                        <div class="alert alert-danger">Error parsing options: @ex.Message</div>
                                    }
                                }
                                else
                                {
                                    <div class="alert alert-warning">No options found for this question.</div>
                                }
                                break;
                            case QuizFolio.Models.QuestionType.Dropdown:
                                @if (!string.IsNullOrEmpty(question.OptionsJson))
                                {
                                    try
                                    {
                                        var options = System.Text.Json.JsonSerializer.Deserialize<List<string>>(question.OptionsJson);
                                        if (options != null && options.Any())
                                        {
                                            <select class="form-select">
                                                @foreach (var option in options)
                                                {
                                                    <option value="@option">@option</option>
                                                }
                                            </select>
                                        }
                                    }
                                    catch (System.Text.Json.JsonException ex)
                                    {
                                        <div class="alert alert-danger">Error parsing options: @ex.Message</div>
                                    }
                                }
                                else
                                {
                                    <div class="alert alert-warning">No options found for this question.</div>
                                }
                                break;
                            // Add other cases for your enum values
                            default:
                                <div class="alert alert-warning">Question type not handled: @question.QuestionType</div>
                                break;
                            }
                    </div>
                    <br />
                }
            }
            else
            {
                <p>No questions available for this template.</p>
            }
        </div>
        <div class="row">
            <a asp-controller="Template" asp-action="AllTemplate" class="col-2 btn-sm btn-primary">Back to Templates</a>
            <div class="form-group col-10">
                <button type="submit" class="btn-sm btn-success">Submit Response</button>
            </div>
    </div>
</body>